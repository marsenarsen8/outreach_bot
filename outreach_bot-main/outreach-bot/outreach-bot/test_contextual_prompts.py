import asyncio
import sys
import os
import config

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
from outreach_bot import get_contextual_prompt, get_current_prompt, get_relevant_knowledge

async def test_contextual_prompts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤...")
    
    test_messages = [
        "–•–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å —Å–∞–π—Ç",
        "–°–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç –ª–µ–Ω–¥–∏–Ω–≥?",
        "–ó–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Å–¥–µ–ª–∞–µ—Ç–µ?",
        "–ü–æ–∫–∞–∂–∏—Ç–µ –ø—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç",
        "–°–ø–∞—Å–∏–±–æ, –ø–æ–Ω—è—Ç–Ω–æ",
        "–ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?"
    ]
    
    for message in test_messages:
        print(f"\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º: '{message}'")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        prompt = get_contextual_prompt(message)
        print(f"ü§ñ –ü—Ä–æ–º–ø—Ç —Å–æ–∑–¥–∞–Ω:")
        print(f"   {prompt[:200]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–º–ø—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if "–ö–õ–ò–ï–ù–¢ –•–û–ß–ï–¢ –ó–ê–ö–ê–ó–ê–¢–¨ –°–ê–ô–¢" in prompt:
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç: –ó–ê–ö–ê–ó –°–ê–ô–¢–ê")
        elif "–ö–õ–ò–ï–ù–¢ –°–ü–†–ê–®–ò–í–ê–ï–¢ –û –¶–ï–ù–ê–•" in prompt:
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç: –¶–ï–ù–´")
        elif "–ö–õ–ò–ï–ù–¢ –°–ü–†–ê–®–ò–í–ê–ï–¢ –û –°–†–û–ö–ê–•" in prompt:
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç: –°–†–û–ö–ò")
        elif "–ö–õ–ò–ï–ù–¢ –ü–†–û–°–ò–¢ –ü–†–ò–ú–ï–†–´ –†–ê–ë–û–¢" in prompt:
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç: –ü–†–ò–ú–ï–†–´")
        elif "–ö–õ–ò–ï–ù–¢ –ë–õ–ê–ì–û–î–ê–†–ò–¢" in prompt:
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç: –ë–õ–ê–ì–û–î–ê–†–ù–û–°–¢–¨")
        elif "–ö–õ–ò–ï–ù–¢ –°–ü–†–ê–®–ò–í–ê–ï–¢ –û –¢–ï–•–ù–û–õ–û–ì–ò–Ø–•" in prompt:
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç: –¢–ï–•–ù–û–õ–û–ì–ò–ò")
        else:
            print("‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç: –û–ë–©–ò–ô –í–û–ü–†–û–°")

async def test_knowledge_base():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑—É –∑–Ω–∞–Ω–∏–π"""
    print("\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...")
    
    knowledge = get_relevant_knowledge("—Å–∞–π—Ç")
    if knowledge:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –∑–Ω–∞–Ω–∏—è: {knowledge[:100]}...")
    else:
        print("‚ùå –ó–Ω–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

async def main():
    await test_contextual_prompts()
    await test_knowledge_base()

if __name__ == "__main__":
    asyncio.run(main()) 